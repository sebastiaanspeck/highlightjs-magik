/*! `magik` grammar compiled for Highlight.js 11.11.1 */
(()=>{var e=(()=>{"use strict";function e(e){
return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e
}var n,a;return e(a?n:(a=1,n=e=>({name:"Magik",aliases:["magik"],
case_insensitive:!0,keywords:{
keyword:["_dynamic","_global","_import","_local","_constant","_class","_abstract","_private","_iter","_method","_endmethod","_proc","_endproc","_block","_endblock","_if","_then","_elif","_else","_endif","_loop","_for","_over","_while","_finally","_loopbody","_leave","_continue","_endloop","_handling","_default","_catch","_endcatch","_throw","_primitive","_try","_when","_endtry","_protect","_locking","_protection","_endprotect","_lock","_endlock","_with"],
literal:["_true","_false","_maybe","_unset"],
built_in:["_package","_thisthread"],
"variable.language":["_self","_super","_clone"],
"title.function.invoke":["def_slotted_exemplar"],
meta:["_gather","_scatter","_allresults","_optional"]},
contains:[e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,{scope:"doctag",begin:"##",
end:"$"},{scope:"comment",begin:"#",end:"$"},{scope:"symbol",
begin:/:(\|[^|]*\||[\w?!_])+/},{scope:"property",begin:"_pragma",end:"$"},{
scope:"operator",variants:[{begin:/<</},{begin:/\^<</},{begin:/_and<</},{
begin:/_andif<</},{begin:/_or<</},{begin:/_orif<</},{begin:/_xor<</},{
begin:/\*\*<</},{begin:/\*\*\^<</},{begin:/\*<</},{begin:/\*?\^<</},{
begin:/\/<</},{begin:/\/\^<</},{begin:/_mod<</},{begin:/_div<</},{begin:/-\^?<</
},{begin:/\+<</},{begin:/\+\^<</}]},{scope:"operator",variants:[{begin:/>>/},{
begin:"_return"}]},{scope:"meta",
begin:/@\s?(\|[A-Za-z0-9_?.!]*\||[A-Za-z0-9_?!]+)+/},{scope:"number",variants:[{
begin:"\\b\\d+(\\.\\d+)?([eE&][+-]?\\d+)?\\b"},{
begin:"\\b(?:[2-9]|[1-2]\\d|3[0-6])[rR][a-zA-Z0-9]+\\b"}],relevance:0},{
match:[/\b_class/,/\s+/,/\|[a-zA-Z0-9._]+\|/],scope:{1:"keyword",3:"title.class"
}},{scope:"variable",variants:[{begin:/![A-Za-z][A-Za-z0-9_?!]*!/},{
begin:/\|![A-Za-z0-9_?!]+!\|/},{begin:/\|![A-Za-z0-9_?!]+\|!/},{
begin:/!\|[A-Za-z0-9_?!]+\|!/},{
begin:/(\|[A-Za-z]?[A-Za-z0-9_?!]*\||[A-Za-z][A-Za-z0-9_?!]*):![A-Za-z][A-Za-z0-9_?!]*!/
},{begin:/!\|\|!/}]},{scope:"variable",
begin:/[a-zA-Z_][a-zA-Z0-9_]*:[a-zA-Z_][a-zA-Z0-9_]*/},{scope:"variable",
begin:/@(?:[a-zA-Z_][a-zA-Z0-9_]*:)?[a-zA-Z_][a-zA-Z0-9_]*/},{
match:[/(?:_abstract\s+)?/,/(?:_private\s+)?/,/(?:_iter\s+)?/,/_method/,/\s+/,/(\|[a-zA-Z_][a-zA-Z0-9_]*\|)|([a-zA-Z_][a-zA-Z0-9_]*)/,/\./,/(\|[a-zA-Z_][a-zA-Z0-9_]*\|)|([a-zA-Z_][a-zA-Z0-9_]*)/],
scope:{4:"keyword",6:"title.class",7:"punctuation",8:"title.function"}},{
scope:"symbol",begin:/%([a-zA-Z][a-zA-Z0-9_?!]*|.| )/},{scope:"regexp",
variants:[{begin:/\/(?!\/)(?:\\.|[^\\\/\n])+\/[qisdlmuCX]*/},{begin:/\/\//}],
relevance:0},{scope:"operator",variants:[{begin:"_is"},{begin:"_isnt"},{
begin:"_cf"},{begin:"="},{begin:"~="},{begin:"<>"},{begin:">="},{begin:"<="},{
begin:"<"},{begin:">"}]},{scope:"operator",variants:[{begin:"_and"},{begin:"_or"
},{begin:"_xor"},{begin:"_andif"},{begin:"_orif"}]},{scope:"operator",
variants:[{begin:/\*\*/},{begin:/\*/},{begin:/\\/},{begin:"_mod"},{begin:"_div"
}]},{scope:"operator",variants:[{begin:/\+/},{begin:/-/},{begin:"_not"},{
begin:/~/}]},{scope:"punctuation",begin:/[[\](){},;]/}]})))})()
;hljs.registerLanguage("magik",e)})();